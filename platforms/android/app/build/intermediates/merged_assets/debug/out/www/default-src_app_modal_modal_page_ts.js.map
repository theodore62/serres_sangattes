{"version":3,"sources":["./src/app/modal/modal.page.ts","./src/app/services/client/client.service.ts","./src/app/services/commande/commande.service.ts","./src/app/services/ionic-toast.service.ts","./src/app/modal/modal.page.scss","./src/app/modal/modal.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyD;AAMjC;AACxB,QAAQ;AACR,UAAU;AAC0D;AACI;AACN;AAKlE,QAAQ;AACmD;AAMnC;AACxB,QAAQ;AACyD;AAGN;AACS;AACX;IAM5C,SAAS,SAAT,SAAS;IAuDpB,oDAAoD;IACpD,oDAAoD;IAEpD,YACU,eAAgC,EAChC,IAAwB,EACxB,cAA8B,EAC9B,eAAgC,EAChC,aAA4B,EAC5B,eAAgC,EAChC,WAAwB,EACxB,MAAc,EACd,SAA2B,EAC3B,iBAAoC,EACpC,SAA4B,EAC5B,MAAc;QAXd,oBAAe,GAAf,eAAe,CAAiB;QAChC,SAAI,GAAJ,IAAI,CAAoB;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAkB;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,cAAS,GAAT,SAAS,CAAmB;QAC5B,WAAM,GAAN,MAAM,CAAQ;QArEjB,gBAAW,GAAG,KAAK,CAAC;QASpB,iBAAY,GAAQ,EAAE,CAAC;QAEvB,UAAK,GAAG,EAAE,CAAC;QAOX,UAAK,GAAQ,EAAE,CAAC;QAEhB,WAAM,GAAW;YACtB,EAAE,EAAE,EAAE;YACN,GAAG,EAAE,EAAE;YACP,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;YACf,IAAI,EAAE,EAAE;YACR,EAAE,EAAE,EAAE;YACN,CAAC,EAAE,EAAE;YACL,KAAK,EAAE,EAAE;SACV,CAAC;QAmBK,iBAAY,GAAQ,EAAE,CAAC;IAmB3B,CAAC;IAEJ,IAAI,YAAY;QACd,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;SACzC;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;SACvC;aAAM;YACL,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;SAC9B;IACH,CAAC;IAED,QAAQ;QACN,qFAAqF;QACrF,qFAAqF;QACrF,qFAAqF;QACrF,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC/C,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBAChC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACrC,kBAAkB,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;aAChD,CAAC,CAAC;YACH,IAAI,CAAC,eAAe;iBACjB,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;iBAClC,IAAI,CAAC,CAAC,cAAc,EAAE,EAAE;gBACvB,WAAW;gBACX,2BAA2B;gBAC3B,gDAAgD;gBAChD,WAAW;gBACX,8BAA8B;gBAC9B,mDAAmD;gBACnD,WAAW;gBACX,4BAA4B;gBAC5B,iDAAiD;gBACjD,WAAW;gBACX,gCAAgC;gBAChC,qDAAqD;gBACrD,WAAW;gBACX,0CAA0C;gBAC1C,+DAA+D;YACjE,CAAC,CAAC,CAAC;SACN;QACD,qFAAqF;QACrF,qFAAqF;QACrF,qFAAqF;aAChF,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC/B,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE;gBAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;aAC5B;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC7C,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzD,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5D,KAAK,EAAE,CAAG,EAAE,EAAC,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,EAAE,4DAAgB,CAAC,CAAC;gBAC9E,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/D,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7D,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7D,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;gBAChE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBAClC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChE,QAAQ;yBACL,cAAc,CAAC,QAAQ,CAAC;yBACxB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;oBACvC,QAAQ;yBACL,cAAc,CAAC,OAAO,CAAC;yBACvB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;oBACtC,QAAQ;yBACL,cAAc,CAAC,MAAM,CAAC;yBACtB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;oBACrC,QAAQ;yBACL,cAAc,CAAC,UAAU,CAAC;yBAC1B,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACzC,QAAQ;yBACL,cAAc,CAAC,SAAS,CAAC;yBACzB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;oBACxC,QAAQ;yBACL,cAAc,CAAC,QAAQ,CAAC;yBACxB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gBACzC,CAAC,CAAC;YAEJ,CAAC,CAAC,CAAC;SACJ;QACD,qFAAqF;QACrF,qFAAqF;QACrF,qFAAqF;aAChF;YACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,CAAC;YACrE,IAAI,CAAC,QAAQ,GAAG;gBACd,SAAS;gBACT,SAAS;gBACT,MAAM;gBACN,OAAO;gBACP,KAAK;gBACL,MAAM;gBACN,SAAS;gBACT,MAAM;gBACN,WAAW;gBACX,SAAS;gBACT,UAAU;gBACV,UAAU;aACX,CAAC;YACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACpC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBAChC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACpC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACpC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACpC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACxC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBACjC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBAC/B,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;gBAC9B,KAAK,EAAE,CAAC,EAAE,CAAC;aACZ,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;gBACjE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBACjD,IAAI,CAAC,IAAI;qBACN,GAAG,CAAC,GAAG,GAAG,YAAY,CAAC,KAAK,CAAC;qBAC7B,cAAc,EAAE;qBAChB,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;oBACpB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC;oBACpC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;wBAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;wBAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;wBACzB,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;4BAC3B,IAAI,CAAC,KAAK,GAAG,oBAAoB,CAAC;4BAClC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;4BAChE,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;4BAChE,QAAQ;iCACL,cAAc,CAAC,SAAS,CAAC;iCACzB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;4BACxC,QAAQ;iCACL,cAAc,CAAC,SAAS,CAAC;iCACzB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;4BACxC,QAAQ;iCACL,cAAc,CAAC,aAAa,CAAC;iCAC7B,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;4BAC5C,QAAQ;iCACL,cAAc,CAAC,MAAM,CAAC;iCACtB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;4BACrC,QAAQ;iCACL,cAAc,CAAC,UAAU,CAAC;iCAC1B,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;4BACpC,QAAQ;iCACL,cAAc,CAAC,cAAc,CAAC;iCAC9B,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;4BAC3C,QAAQ;iCACL,cAAc,CAAC,SAAS,CAAC;iCACzB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;yBACzC;6BAAM;4BACL,IAAI,CAAC,KAAK,GAAG,uBAAuB,CAAC;4BACrC,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;4BAC9D,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;4BAChE,QAAQ;iCACL,cAAc,CAAC,SAAS,CAAC;iCACzB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;4BACxC,QAAQ;iCACL,cAAc,CAAC,SAAS,CAAC;iCACzB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;4BACxC,QAAQ;iCACL,cAAc,CAAC,aAAa,CAAC;iCAC7B,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;4BAC5C,QAAQ;iCACL,cAAc,CAAC,MAAM,CAAC;iCACtB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;4BACrC,QAAQ;iCACL,cAAc,CAAC,UAAU,CAAC;iCAC1B,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;4BACpC,QAAQ;iCACL,cAAc,CAAC,YAAY,CAAC;iCAC5B,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;4BAC3C,QAAQ;iCACL,cAAc,CAAC,SAAS,CAAC;iCACzB,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;yBACzC;wBACD,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;wBAC9D,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9D,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,qFAAqF;IACrF,qFAAqF;IACrF,qFAAqF;IAE/E,WAAW;;YACf,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;gBAClC,IAAI,CAAC,OAAO,GAAG,gCAAgC,CAAC;gBAChD,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBAClD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;gBACxB,IAAI,CAAC,eAAe,CAAC,cAAc,CACjC,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAC9B,CAAC;gBACF,MAAM,OAAO,CAAC,YAAY,EAAE,CAAC;gBAC7B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC9C,MAAM,EAAE,cAAc;oBACtB,OAAO,EAAE,wDAAwD;oBACjE,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;oBAC3B,SAAS,EAAE,IAAI;iBAChB,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IAED,qFAAqF;IACrF,qFAAqF;IACrF,qFAAqF;IAE/E,QAAQ;;YACZ,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;YAC9C,IAAI,CAAC,KAAK,GAAG,wBAAwB,GAAG,YAAY,CAAC;QACvD,CAAC;KAAA;IACK,WAAW;;YACf,MAAM,OAAO,GAAkB;gBAC7B,OAAO,EAAE,GAAG;gBACZ,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ;gBACrD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI;gBAC3C,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO;gBACxC,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,YAAY;aACvD,CAAC;YACF,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC;KAAA;IAEK,cAAc;;YAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI;iBACpB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;iBACnB,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACvC,CAAC;KAAA;IAEK,UAAU;;YACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACvB,IAAI,CAAC,OAAO,GAAG,gCAAgC,CAAC;gBAChD,OAAO,KAAK,CAAC;aACd;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;oBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC;oBAC/C,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;oBAC7C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;iBAC3C;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC;iBAChD;gBACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;oBAClD,QAAQ,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;gBACxB,IAAI,CAAC,cAAc,CAAC,YAAY,CAC9B,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,OAAO,CAAC,KAAK,CACnB,CAAC;gBACF,MAAM,OAAO,CAAC,YAAY,EAAE,CAAC;gBAC7B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC9C,MAAM,EAAE,cAAc;oBACtB,OAAO,EAAE,wDAAwD;oBACjE,OAAO,EAAE,CAAC,IAAI,CAAC;iBAChB,CAAC,CAAC;gBACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;gBACtB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;oBAC3B,SAAS,EAAE,IAAI;iBAChB,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IACD,qFAAqF;IACrF,qFAAqF;IACrF,qFAAqF;IACrF,SAAS,KAAI,CAAC;IAEd,cAAc,CAAC,EAAO;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;IACnC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;YAC3B,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;IACL,CAAC;CACF;;YA/YC,2DAAe;YAeR,sEAAkB;YARlB,4EAAc;YACd,gFAAe;YACf,0EAAa;YAPpB,2DAAe;YAgBf,uDAAW;YAKJ,4DAAM;YAGN,sEAAgB;YAvBvB,6DAAiB;YAwBV,4EAAiB;YACD,oDAAM;;;mBAS5B,iDAAK;yBAqCL,iDAAK;uBAUL,iDAAK;;AAlDK,SAAS;IALrB,yDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,0EAAgC;;KAEjC,CAAC;GACW,SAAS,CA6WrB;AA7WqB;;;;;;;;;;;;;;;;;;;;;;ACpCqB;AACgB;AAEpB;AACoB;IAK9C,aAAa,SAAb,aAAa;IAKxB,YACU,SAA2B,EAC3B,IAAwB;QADxB,cAAS,GAAT,SAAS,CAAkB;QAC3B,SAAI,GAAJ,IAAI,CAAoB;QAL3B,QAAG,GAAG,QAAQ,CAAC;QACf,WAAM,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAS,QAAQ,CAAC,CAAC;IAKxD,CAAC;IACL,cAAc;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QAClC,+DAA+D;IACjE,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IACD,SAAS,CAAC,EAAE;QACV,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAE;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,qDAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACvE,CAAC;IACD,YAAY,CAAC,EAAE,EAAE,MAAM;QACrB,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO;IACT,CAAC;IACD,YAAY,CAAC,EAAU;QACrB,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IACvC,CAAC;CAEF;;YAvCQ,qEAAgB;YAGhB,qEAAkB;;AAKd,aAAa;IAHzB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,aAAa,CA+BzB;AA/ByB;;;;;;;;;;;;;;;;;;;;;;ACTiB;AAGgB;AAEpB;AACoB;IAI9C,eAAe,SAAf,eAAe;IAG1B,YACU,SAA2B,EAC3B,IAAwB;QADxB,cAAS,GAAT,SAAS,CAAkB;QAC3B,SAAI,GAAJ,IAAI,CAAoB;QAJ3B,QAAG,GAAG,WAAW,CAAC;QAClB,aAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAW,WAAW,CAAC,CAAC;IAIhE,CAAC;IAEJ,gBAAgB;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,qDAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAChE,CAAC;IACD,YAAY,CAAC,QAAkB;QAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IACD,iBAAiB,CAAC,EAAE;QAClB,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,qDAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACzE,CAAC;IACD,cAAc,CAAC,EAAE,EAAE,MAAgB;QACjC,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtC,OAAO;IACT,CAAC;IACD,cAAc,CAAC,EAAY;QACzB,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IACzC,CAAC;CACF;;YArCQ,qEAAgB;YAGhB,qEAAkB;;AAId,eAAe;IAH3B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA8B3B;AA9B2B;;;;;;;;;;;;;;;;;;;;ACVe;AACM;IAIpC,iBAAiB,SAAjB,iBAAiB;IAG5B,YAAmB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;IAAG,CAAC;IAE7C,SAAS,CAAC,IAAI;QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK;aACtB,MAAM,CAAC;YACN,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,SAAS;SACpB,CAAC;aACD,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,SAAS,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;YAtBQ,2DAAe;;AAIX,iBAAiB;IAH7B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAkB7B;AAlB6B;;;;;;;;;;;;;;;;ACL9B,iEAAe,aAAa,oCAAoC,GAAG,iBAAiB,gBAAgB,8DAA8D,GAAG,4CAA4C,gBAAgB,GAAG,gBAAgB,0BAA0B,GAAG,aAAa,0BAA0B,GAAG,cAAc,mDAAmD,GAAG,eAAe,0BAA0B,GAAG,eAAe,uBAAuB,GAAG,sBAAsB,0BAA0B,GAAG,6CAA6C,m4CAAm4C,E;;;;;;;;;;;;;;;ACAv7D,iEAAe,m+VAAm+V,cAAc,+uBAA+uB,66BAA66B,iBAAiB,KAAK,gBAAgB,otBAAotB,SAAS,uLAAuL,uhBAAuhB,28BAA28B,QAAQ,KAAK,QAAQ,wJAAwJ,8OAA8O,QAAQ,KAAK,QAAQ,gmEAAgmE,E","file":"default-src_app_modal_modal_page_ts.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport {\r\n  AlertController,\r\n  IonRouterOutlet,\r\n  ModalController,\r\n  LoadingController,\r\n} from '@ionic/angular';\r\n//----//\r\n// service\r\nimport { PlantesService } from '../services/plante/plantes.service';\r\nimport { CommandeService } from '../services/commande/commande.service';\r\nimport { ClientService } from '../services/client/client.service';\r\n//model\r\nimport { Plante } from '../models/plante.model';\r\nimport { Commande } from '../models/commande.model';\r\nimport { Client } from '../models/client.model';\r\n//----//\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport {\r\n  Validators,\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n} from '@angular/forms';\r\n//camera\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { Observable } from 'rxjs';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { IonicToastService } from '../services/ionic-toast.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.page.html',\r\n  styleUrls: ['./modal.page.scss'],\r\n})\r\nexport class ModalPage implements OnInit {\r\n  public isSubmitted = false;\r\n  public message: string;\r\n  @Input() data: string;\r\n\r\n  //---------------------------------------------------------------------------------//\r\n  //------------------------------detail des plantes---------------------------------//\r\n  //---------------------------------------------------------------------------------//\r\n  // plante //\r\n  public id: Plante;\r\n  public planteDetail: any = [];\r\n  public annonce: FormGroup;\r\n  public image = '';\r\n  public imagePath: string;\r\n  public epoque: string;\r\n  public varieters: Observable<any[]>;\r\n  public upload: any;\r\n  public urlImage: any;\r\n  public urlImageUpdate: any;\r\n  public texte: any = '';\r\n  public listMois: any;\r\n  public plante: Plante = {\r\n    id: '',\r\n    nom: '',\r\n    variete: '',\r\n    couleur: '',\r\n    fleuraison: '',\r\n    hauteur: '',\r\n    description: '',\r\n    type: '',\r\n    de: '',\r\n    a: '',\r\n    image: '',\r\n  };\r\n\r\n  //---------------------------------------------------------------------------------//\r\n  //-------------------------commandes-----------------------------------------------//\r\n  //---------------------------------------------------------------------------------//\r\n  // commande //\r\n\r\n  @Input() idCommande: string;\r\n  public formulaireCommande: FormGroup;\r\n  nom: string;\r\n  prix: string;\r\n  quantite: string;\r\n\r\n  //---------------------------------------------------------------------------------//\r\n  //-------------------------client--------------------------------------------------//\r\n  //---------------------------------------------------------------------------------//\r\n  // client //\r\n  @Input() idClient: string;\r\n  public formulaireClient: FormGroup;\r\n  public clientDetail: any = [];\r\n  public affichage: any;\r\n\r\n  // ---------------------------------------------- //\r\n  // ---------------------------------------------- //\r\n\r\n  constructor(\r\n    private alertController: AlertController,\r\n    private afSG: AngularFireStorage,\r\n    private plantesService: PlantesService,\r\n    private commandeService: CommandeService,\r\n    private clientService: ClientService,\r\n    private modalController: ModalController,\r\n    private formBuilder: FormBuilder,\r\n    private camera: Camera,\r\n    private firestore: AngularFirestore,\r\n    private loadingController: LoadingController,\r\n    private toastCtrl: IonicToastService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  get errorControl() {\r\n    if (this.data === 'commande') {\r\n      return this.formulaireCommande.controls;\r\n    } else if (this.data === 'client') {\r\n      return this.formulaireClient.controls;\r\n    } else {\r\n      return this.annonce.controls;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    //---------------------------------------------------------------------------------//\r\n    //-------------------------commandes-----------------------------------------------//\r\n    //---------------------------------------------------------------------------------//\r\n    if (this.data === 'commande') {\r\n      this.formulaireCommande = this.formBuilder.group({\r\n        nom: ['', [Validators.required]],\r\n        client: ['', [Validators.required]],\r\n        prix: ['', [Validators.required]],\r\n        quantite: ['', [Validators.required]],\r\n        infoComplementaire: ['', [Validators.required]],\r\n      });\r\n      this.commandeService\r\n        .getDetailCommande(this.idCommande)\r\n        .then((detailCommande) => {\r\n          // document\r\n          //   .getElementById('nom')\r\n          //   .setAttribute('value', detailCommande.nom);\r\n          // document\r\n          //   .getElementById('client')\r\n          //   .setAttribute('value', detailCommande.client);\r\n          // document\r\n          //   .getElementById('prix')\r\n          //   .setAttribute('value', detailCommande.prix);\r\n          // document\r\n          //   .getElementById('quantite')\r\n          //   .setAttribute('value', detailCommande.quantite);\r\n          // document\r\n          //   .getElementById('infoComplementaire')\r\n          //   .setAttribute('value', detailCommande.infoComplementaire);\r\n        });\r\n    }\r\n    //---------------------------------------------------------------------------------//\r\n    //-------------------------client--------------------------------------------------//\r\n    //---------------------------------------------------------------------------------//\r\n    else if (this.data === 'client') {\r\n      if (this.affichage == undefined) {\r\n        this.affichage = 'ajouter';\r\n      }\r\n      this.formulaireClient = this.formBuilder.group({\r\n        nom: ['', [Validators.required, Validators.minLength(2)]],\r\n        prenom: ['', [Validators.required, Validators.minLength(2)]],\r\n        email: [  '',[Validators.required, Validators.minLength(2), Validators.email]],\r\n        fixe: ['', [Validators.maxLength(10)]],\r\n        portable: ['', [Validators.required, Validators.maxLength(10)]],\r\n        adresse: ['', [Validators.required, Validators.minLength(2)]],\r\n        postal: ['', [Validators.required, Validators.maxLength(5)]],\r\n      });\r\n      console.log(this.idClient);\r\n      this.clientService.getClient(this.idClient).then((detailClient) => {\r\n        console.log(detailClient)\r\n        this.clientDetail.push(detailClient);\r\n        this.clientDetail.forEach((index) => {\r\n          document.getElementById('nom').setAttribute('value', index.nom);\r\n          document\r\n            .getElementById('prenom')\r\n            .setAttribute('value', index.prenom);\r\n          document\r\n            .getElementById('email')\r\n            .setAttribute('value', index.email);\r\n          document\r\n            .getElementById('fixe')\r\n            .setAttribute('value', index.fixe);\r\n          document\r\n            .getElementById('portable')\r\n            .setAttribute('value', index.portable);\r\n          document\r\n            .getElementById('adresse')\r\n            .setAttribute('value', index.adresse);\r\n          document\r\n            .getElementById('postal')\r\n            .setAttribute('value', index.postal);\r\n        })\r\n     \r\n      });\r\n    }\r\n    //---------------------------------------------------------------------------------//\r\n    //------------------------------detail des plantes---------------------------------//\r\n    //---------------------------------------------------------------------------------//\r\n    else {\r\n      this.varieters = this.firestore.collection('Variete').valueChanges();\r\n      this.listMois = [\r\n        'janvier',\r\n        'février',\r\n        'mars',\r\n        'avril',\r\n        'mai',\r\n        'juin',\r\n        'juillet',\r\n        'aout',\r\n        'septembre',\r\n        'octobre',\r\n        'novembre',\r\n        'décembre',\r\n      ];\r\n      this.annonce = this.formBuilder.group({\r\n        nom: ['', [Validators.required]],\r\n        variete: ['', [Validators.required]],\r\n        couleur: ['', [Validators.required]],\r\n        fleuraison: ['', [Validators.required]],\r\n        hauteur: ['', [Validators.required]],\r\n        description: ['', [Validators.required]],\r\n        type: ['', [Validators.required]],\r\n        de: ['', [Validators.required]],\r\n        a: ['', [Validators.required]],\r\n        image: [''],\r\n      });\r\n      this.plantesService.getDetailPlante(this.id).then((detailPlante) => {\r\n        this.planteDetail.push(detailPlante);\r\n        this.urlImageUpdate = this.planteDetail[0].image;\r\n        this.afSG\r\n          .ref('/' + detailPlante.image)\r\n          .getDownloadURL()\r\n          .subscribe((imgUrl) => {\r\n            this.planteDetail[0].image = imgUrl;\r\n            this.planteDetail.forEach((items) => {\r\n              this.urlImage = items.image;\r\n              this.epoque = items.type;\r\n              if (this.epoque !== 'Fleur') {\r\n                this.texte = 'Epoque de récolte:';\r\n                document.getElementById('fleuraisonLF').style.display = 'block';\r\n                document.getElementById('nom').setAttribute('value', items.nom);\r\n                document\r\n                  .getElementById('couleur')\r\n                  .setAttribute('value', items.couleur);\r\n                document\r\n                  .getElementById('hauteur')\r\n                  .setAttribute('value', items.hauteur);\r\n                document\r\n                  .getElementById('description')\r\n                  .setAttribute('value', items.description);\r\n                document\r\n                  .getElementById('type')\r\n                  .setAttribute('value', items.type);\r\n                document\r\n                  .getElementById('urlimage')\r\n                  .setAttribute('src', items.image);\r\n                document\r\n                  .getElementById('fleuraisonLF')\r\n                  .setAttribute('value', items.fleuraison);\r\n                document\r\n                  .getElementById('variete')\r\n                  .setAttribute('value', items.variete);\r\n              } else {\r\n                this.texte = 'Epoque de fleuraison:';\r\n                document.getElementById('fleuraison').style.display = 'block';\r\n                document.getElementById('nom').setAttribute('value', items.nom);\r\n                document\r\n                  .getElementById('couleur')\r\n                  .setAttribute('value', items.couleur);\r\n                document\r\n                  .getElementById('hauteur')\r\n                  .setAttribute('value', items.hauteur);\r\n                document\r\n                  .getElementById('description')\r\n                  .setAttribute('value', items.description);\r\n                document\r\n                  .getElementById('type')\r\n                  .setAttribute('value', items.type);\r\n                document\r\n                  .getElementById('urlimage')\r\n                  .setAttribute('src', items.image);\r\n                document\r\n                  .getElementById('fleuraison')\r\n                  .setAttribute('value', items.fleuraison);\r\n                document\r\n                  .getElementById('variete')\r\n                  .setAttribute('value', items.variete);\r\n              }\r\n              document.getElementById('de').setAttribute('value', items.de);\r\n              document.getElementById('a').setAttribute('value', items.a);\r\n            });\r\n          });\r\n      });\r\n    }\r\n  }\r\n  //---------------------------------------------------------------------------------//\r\n  //-------------------------commandes-----------------------------------------------//\r\n  //---------------------------------------------------------------------------------//\r\n\r\n  async addCommande() {\r\n    if (!this.formulaireCommande.valid) {\r\n      this.message = 'enter une valeur dans le champ';\r\n      return false;\r\n    } else {\r\n      const loading = await this.loadingController.create({\r\n        duration: 2000,\r\n      });\r\n      await loading.present();\r\n      this.commandeService.updateCommande(\r\n        this.idCommande,\r\n        this.formulaireCommande.value\r\n      );\r\n      await loading.onDidDismiss();\r\n      const alert = await this.alertController.create({\r\n        header: 'Félicitation',\r\n        message: 'La ou les modification(s) on ou à bien était éffectuer',\r\n        buttons: ['OK'],\r\n      });\r\n      await alert.present();\r\n      this.modalController.dismiss({\r\n        dismissed: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  //---------------------------------------------------------------------------------//\r\n  //------------------------------detail des plantes---------------------------------//\r\n  //---------------------------------------------------------------------------------//\r\n\r\n  async addPhoto() {\r\n    const libraryImage = await this.openLibrary();\r\n    this.image = 'data:image/jpg;base64,' + libraryImage;\r\n  }\r\n  async openLibrary() {\r\n    const options: CameraOptions = {\r\n      quality: 100,\r\n      destinationType: this.camera.DestinationType.DATA_URL,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      mediaType: this.camera.MediaType.PICTURE,\r\n      targetWidth: 1000,\r\n      targetHeight: 1000,\r\n      sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\r\n    };\r\n    return await this.camera.getPicture(options);\r\n  }\r\n\r\n  async uploadFirebase() {\r\n    this.upload = this.afSG\r\n      .ref(this.imagePath)\r\n      .putString(this.image, 'data_url');\r\n  }\r\n\r\n  async addAnnonce() {\r\n    if (!this.annonce.valid) {\r\n      this.message = 'enter une valeur dans le champ';\r\n      return false;\r\n    } else {\r\n      console.log(this.image);\r\n      if (this.image !== '') {\r\n        this.imagePath = new Date().getTime() + '.jpg';\r\n        this.uploadFirebase();\r\n        this.afSG.refFromURL(this.urlImage).delete();\r\n        this.annonce.value.image = this.imagePath;\r\n      } else {\r\n        this.annonce.value.image = this.urlImageUpdate;\r\n      }\r\n      const loading = await this.loadingController.create({\r\n        duration: 2000,\r\n      });\r\n      await loading.present();\r\n      this.plantesService.updatePlante(\r\n        this.id,\r\n        this.urlImage,\r\n        this.annonce.value\r\n      );\r\n      await loading.onDidDismiss();\r\n      const alert = await this.alertController.create({\r\n        header: 'Félicitation',\r\n        message: 'La ou les modification(s) on ou à bien était éffectuer',\r\n        buttons: ['OK'],\r\n      });\r\n      await alert.present();\r\n      this.modalController.dismiss({\r\n        dismissed: true,\r\n      });\r\n    }\r\n  }\r\n  //---------------------------------------------------------------------------------//\r\n  //-------------------------client--------------------------------------------------//\r\n  //---------------------------------------------------------------------------------//\r\n  addClient() {}\r\n\r\n  segmentChanged(ev: any) {\r\n    this.affichage = ev.detail.value;\r\n  }\r\n\r\n  closeModal() {\r\n    this.modalController.dismiss({\r\n      dismissed: true,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { first } from 'rxjs/Operators';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { Client } from '../../models/client.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  public ref = 'Client';\r\n  public client = this.firestore.collection<Client>('Client');\r\n\r\n  constructor(\r\n    private firestore: AngularFirestore,\r\n    private afSG: AngularFireStorage\r\n  ) { }\r\n  getListClients(){\r\n    return this.client.valueChanges();\r\n    // return this.client.valueChanges().pipe(first()).toPromise();\r\n  }\r\n\r\n  postClient(client: Client) {\r\n    return this.client.add(client);\r\n  }\r\n  getClient(id){\r\n    const url = '/' + id ;  \r\n    return this.client.doc(url).valueChanges().pipe(first()).toPromise();\r\n  }\r\n  updateClient(id, values) {\r\n    const url = '/' + id;\r\n    this.client.doc(url).update(values);\r\n    return;\r\n  }\r\n  deleteClient(id: Client) {\r\n    const url = '/' + id;\r\n    return this.client.doc(url).delete();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// model\r\nimport { Commande } from '../../models/commande.model';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { first } from 'rxjs/Operators';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommandeService {\r\n  public ref = 'Commandes';\r\n  public commande = this.firestore.collection<Commande>('Commandes');\r\n  constructor(\r\n    private firestore: AngularFirestore,\r\n    private afSG: AngularFireStorage\r\n  ) {}\r\n  \r\n  getListCommandes(){\r\n    return this.commande.valueChanges();\r\n  }\r\n  getCommandesList() {\r\n    return this.commande.valueChanges().pipe(first()).toPromise();\r\n  }\r\n  postCommande(commande: Commande) {\r\n    return this.commande.add(commande);\r\n  }\r\n  getDetailCommande(id) {\r\n    const url = '/' + id;\r\n    return this.commande.doc(url).valueChanges().pipe(first()).toPromise();\r\n  }\r\n  updateCommande(id, values: Commande) {\r\n    const url = '/' + id;\r\n    this.commande.doc(url).update(values);\r\n    return;\r\n  }\r\n  deleteCommande(id: Commande) {\r\n    const url = '/' + id;\r\n    return this.commande.doc(url).delete();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IonicToastService {\r\n  public myToast: any;\r\n\r\n  constructor(public toast: ToastController) {}\r\n\r\n  showToast(data) {\r\n    this.myToast = this.toast\r\n      .create({\r\n        message: data,\r\n        duration: 2000,\r\n        position: 'top',\r\n        cssClass: 'message'\r\n      })\r\n      .then((toastData) => {\r\n        console.log(toastData);\r\n        toastData.present();\r\n      });\r\n  }\r\n}\r\n","export default \"ion-header {\\n  --ion-background-color: #3366a0;\\n}\\n\\nion-content {\\n  color: #fff;\\n  --ion-background-color: linear-gradient(#3366a0, #9eb7d2);\\n}\\n\\nion-title,\\nion-icon,\\nion-back-button {\\n  color: #fff;\\n}\\n\\nion-button {\\n  --background: #9eb7d2;\\n}\\n\\n#imageB {\\n  --background: #7699bf;\\n}\\n\\nion-item {\\n  --ion-background-color: transparent !important;\\n}\\n\\n.segement {\\n  --background: #3467a0;\\n}\\n\\n.commande {\\n  text-align: center;\\n}\\n\\n.bouttonCommande {\\n  --background: #7296be;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGFsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLCtCQUFBO0FBQUY7O0FBSUE7RUFFRSxXQUFBO0VBQ0EseURBQUE7QUFGRjs7QUFRQTs7O0VBR0UsV0FBQTtBQUxGOztBQU9BO0VBQ0UscUJBQUE7QUFKRjs7QUFNQTtFQUNFLHFCQUFBO0FBSEY7O0FBS0E7RUFDRSw4Q0FBQTtBQUZGOztBQUlBO0VBQ0UscUJBQUE7QUFERjs7QUFLQTtFQUNFLGtCQUFBO0FBRkY7O0FBSUE7RUFDRSxxQkFBQTtBQURGIiwiZmlsZSI6Im1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1oZWFkZXIge1xyXG4gIC8vdjJcclxuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjMzM2NmEwO1xyXG4gIC8vdjFcclxuICAvLyAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjZjVhZjE5O1xyXG59XHJcbmlvbi1jb250ZW50IHtcclxuICAvL3YyXHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogbGluZWFyLWdyYWRpZW50KCMzMzY2YTAsICM5ZWI3ZDIpO1xyXG4gIC8vdjFcclxuICAvLyAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoI2Y1YWYxOSwgI2YxMjcxMSk7XHJcbn1cclxuLy8tLS0tLS0tLS0tLS0tLS8vXHJcbi8vdjJcclxuaW9uLXRpdGxlLFxyXG5pb24taWNvbixcclxuaW9uLWJhY2stYnV0dG9uIHtcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG5pb24tYnV0dG9uIHtcclxuICAtLWJhY2tncm91bmQ6ICM5ZWI3ZDI7XHJcbn1cclxuI2ltYWdlQiB7XHJcbiAgLS1iYWNrZ3JvdW5kOiAjNzY5OWJmO1xyXG59XHJcbmlvbi1pdGVte1xyXG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbn1cclxuLnNlZ2VtZW50e1xyXG4gIC0tYmFja2dyb3VuZDogIzM0NjdhMDtcclxufVxyXG5cclxuXHJcbi5jb21tYW5kZXtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmJvdXR0b25Db21tYW5kZXtcclxuICAtLWJhY2tncm91bmQ6ICM3Mjk2YmU7XHJcbn0iXX0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title *ngIf=\\\"data === 'plante'\\\">modifier la plante</ion-title>\\r\\n    <ion-title *ngIf=\\\"data === 'commande'\\\">modifier la Commande</ion-title>\\r\\n    <ion-title *ngIf=\\\"data === 'client'\\\">détail sûr le client</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" (click)=\\\"closeModal()\\\">\\r\\n      <ion-icon size=\\\"large\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<!-- /***************************************************************************/ -->\\r\\n<!-- /*******************************Commandes***********************************/ -->\\r\\n<!-- /***************************************************************************/ -->\\r\\n\\r\\n<ion-content *ngIf=\\\"data === 'commande'\\\" class=\\\"commande\\\">\\r\\n  <ion-label color=\\\"light\\\" class=\\\"titreAjouter\\\">Ajouter une Commande:</ion-label>\\r\\n  <ion-item>\\r\\n    <ion-input color=\\\"light\\\" type=\\\"text\\\" [(ngModel)]=\\\"nom\\\" placeholder=\\\"nom\\\"></ion-input>\\r\\n    <ion-input color=\\\"light\\\" type=\\\"number\\\" [(ngModel)]=\\\"prix\\\" placeholder=\\\"prix\\\">\\r\\n    </ion-input>\\r\\n    <ion-input color=\\\"light\\\" type=\\\"number\\\" [(ngModel)]=\\\"quantite\\\" placeholder=\\\"quantité\\\"></ion-input>\\r\\n    <ion-item>\\r\\n      <ion-icon name=\\\"close-circle-outline\\\"></ion-icon>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-icon name=\\\"chevron-down-circle-outline\\\" (click)=\\\"addLigne()\\\"></ion-icon>\\r\\n    </ion-item>\\r\\n\\r\\n  </ion-item>\\r\\n  <ion-label color=\\\"light\\\">Détails de la commande:</ion-label>\\r\\n  <form (ngSubmit)=\\\"addCommande()\\\" [formGroup]=\\\"formulaireCommande\\\">\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Nom du client :</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"Nom du client\\\" id='client' value='' formControlName=\\\"client\\\">\\r\\n      </ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.client.errors?.required\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.client.errors?.minlength\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Nom de la plante :</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"Nom de la plante\\\" id='nom' value='' formControlName=\\\"nom\\\">\\r\\n      </ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.nom.errors?.required\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.nom.errors?.minlength\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Prix :</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"number\\\" placeholder=\\\"prix\\\" id='prix' value='' formControlName=\\\"prix\\\"></ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.prix.errors?.required\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.prix.errors?.minlength\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Quantité :</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"number\\\" placeholder=\\\"quantité\\\" id='quantite' value='' formControlName=\\\"quantite\\\">\\r\\n      </ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.quantite.errors?.required\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.quantite.errors?.minlength\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">info complémentaire :</ion-label>\\r\\n      <ion-textarea color=\\\"light\\\" rows=\\\"6\\\" cols=\\\"20\\\" placeholder=\\\"info complémentaire\\\" required\\r\\n        formControlName=\\\"infoComplementaire\\\" id='infoComplementaire' value=''></ion-textarea>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.infoComplementaire.errors?.required\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.infoComplementaire.errors?.minlength\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-button class=\\\"bouttonCommande\\\" type=\\\"submit\\\" expand=\\\"block\\\">Valider</ion-button>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\\r\\n<!-- /***************************************************************************/ -->\\r\\n<!-- /****************************client*****************************************/ -->\\r\\n<!-- /***************************************************************************/ -->\\r\\n<ion-toolbar *ngIf=\\\"data === 'client'\\\" class=\\\"segement\\\">\\r\\n  <!-- Disabled Segment -->\\r\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"ajouter\\\">\\r\\n    <ion-segment-button value=\\\"ajouter\\\">\\r\\n      <ion-label>\\r\\n        <ion-icon  name=\\\"person-outline\\\" size=\\\"small\\\"></ion-icon>\\r\\n      </ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"liste\\\">\\r\\n      <ion-label>\\r\\n        <ion-icon name=\\\"list-outline\\\" size=\\\"small\\\"></ion-icon>\\r\\n      </ion-label>\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n</ion-toolbar>\\r\\n<ion-content *ngIf=\\\"data === 'client' && affichage === 'ajouter'\\\" class=\\\"client\\\">\\r\\n  <ion-item class=\\\"titre\\\">\\r\\n    <ion-label color=\\\"light\\\">Détails du client:</ion-label>\\r\\n  </ion-item>\\r\\n  <form (ngSubmit)=\\\"addClient()\\\" color=\\\"light\\\" [formGroup]=\\\"formulaireClient\\\">\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">nom:</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"nom\\\" id=\\\"nom\\\" formControlName=\\\"nom\\\"></ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.nom.errors?.required\\\"\\r\\n        class=\\\"color\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.nom.errors?.minlength\\\"\\r\\n        class=\\\"color\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Prénom:</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"prenom\\\" id=\\\"prenom\\\" formControlName=\\\"prenom\\\"></ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.prenom.errors?.required\\\"\\r\\n        class=\\\"color\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.prenom.errors?.minlength\\\"\\r\\n        class=\\\"color\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Email:</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"email\\\" placeholder=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.email.errors?.required\\\"\\r\\n        class=\\\"color\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.email.errors?.minlength\\\"\\r\\n        class=\\\"color\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Téléphone fixe:</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"number\\\" placeholder=\\\"fixe\\\" id=\\\"fixe\\\" formControlName=\\\"fixe\\\"></ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.fixe.errors?.required\\\"\\r\\n        class=\\\"color\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.fixe.errors?.minlength\\\"\\r\\n        class=\\\"color\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Téléphone portable:</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"number\\\" placeholder=\\\"portable\\\" id=\\\"portable\\\" formControlName=\\\"portable\\\">\\r\\n      </ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.portable.errors?.required\\\"\\r\\n        class=\\\"color\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.portable.errors?.minlength\\\"\\r\\n        class=\\\"color\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Adresse:</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"adresse\\\" id=\\\"adresse\\\" formControlName=\\\"adresse\\\"></ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.adresse.errors?.required\\\"\\r\\n        class=\\\"color\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.adresse.errors?.minlength\\\"\\r\\n        class=\\\"color\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\">Code postal:</ion-label>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"number\\\" placeholder=\\\"postal\\\" id=\\\"postal\\\" formControlName=\\\"postal\\\"></ion-input>\\r\\n      <!-- Error messages -->\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.postal.errors?.required\\\"\\r\\n        class=\\\"color\\\">\\r\\n        champ obligatoire\\r\\n      </span>\\r\\n      <span class=\\\"error ion-padding\\\" color=\\\"light\\\" *ngIf=\\\"isSubmitted && errorControl.postal.errors?.minlength\\\"\\r\\n        class=\\\"color\\\">\\r\\n        minimun 2 caractéres\\r\\n      </span>\\r\\n    </ion-item>\\r\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\">Valider</ion-button>\\r\\n  </form>\\r\\n</ion-content>\\r\\n<ion-content *ngIf=\\\"data === 'client' && affichage === 'liste'\\\" class=\\\"client\\\">\\r\\n  <ion-item>\\r\\n    <ion-label color=\\\"light\\\" class=\\\"supprimer\\\">Liste des commandes</ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-searchbar (ionChange)=\\\"filterList($event)\\\" placeholder=\\\"recherche\\\"></ion-searchbar>\\r\\n  </ion-item>\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content></ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n  <!-- *ngFor=\\\"let variete of (varieteList)\\\" -->\\r\\n  <ion-list>\\r\\n    <ion-item-sliding>\\r\\n      <ion-item>\\r\\n        <!-- <ion-label color=\\\"light\\\">{{variete.nom }}</ion-label> -->\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"end\\\">\\r\\n        <!-- <ion-item-option (click)=\\\"delete(variete.id)\\\" color=\\\"red\\\">\\r\\n          <ion-icon name=\\\"trash-outline\\\" size=\\\"small\\\" color=\\\"light\\\"></ion-icon>\\r\\n        </ion-item-option> -->\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n\\r\\n<!-- /***************************************************************************/ -->\\r\\n<!-- /****************************Plantes****************************************/ -->\\r\\n<!-- /***************************************************************************/ -->\\r\\n\\r\\n<ion-content *ngIf=\\\"data === 'plante'\\\">\\r\\n\\r\\n  <ion-list style=\\\"background-color: silver;\\\">\\r\\n    <form (ngSubmit)=\\\"addAnnonce()\\\" [formGroup]=\\\"annonce\\\">\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">Nom commun :</ion-label>\\r\\n        <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"nom\\\" id='nom' value='' formControlName=\\\"nom\\\"></ion-input>\\r\\n        <!-- Error messages -->\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.nom.errors?.required\\\">\\r\\n          champ obligatoire\\r\\n        </span>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.nom.errors?.minlength\\\">\\r\\n          minimun 2 caractéres\\r\\n        </span>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">Variété:</ion-label>\\r\\n        <ion-select color=\\\"light\\\" placeholder=\\\"Select One\\\" required id='variete' value='' formControlName=\\\"variete\\\">\\r\\n          <ion-select-option *ngFor=\\\"let varieter of varieters |async\\\" value=\\\"{{ varieter.nom  }}\\\">{{ varieter.nom }}\\r\\n          </ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">Couleur:</ion-label>\\r\\n        <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"couleur\\\" required id='couleur' value=''\\r\\n          formControlName=\\\"couleur\\\"></ion-input>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.couleur.errors?.required\\\">\\r\\n          champ obligatoire\\r\\n        </span>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.couleur.errors?.minlength\\\">\\r\\n          minimun 2 caractéres\\r\\n        </span>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">{{ texte }}</ion-label>\\r\\n\\r\\n        <ion-select color=\\\"light\\\" placeholder=\\\"fleuraison\\\" required id='fleuraison' value=''\\r\\n          formControlName=\\\"fleuraison\\\" style=\\\"display: none;\\\">\\r\\n          <ion-select-option value=\\\"Annuelles\\\">Annuelles</ion-select-option>\\r\\n          <ion-select-option value=\\\"Bisannuelles\\\">Bisannuelles</ion-select-option>\\r\\n          <ion-select-option value=\\\"Vivaces\\\">Vivaces</ion-select-option>\\r\\n          <ion-select-option value=\\\"Aromatiques\\\">Aromatiques</ion-select-option>\\r\\n        </ion-select>\\r\\n\\r\\n        <ion-select color=\\\"light\\\" placeholder=\\\"Select One\\\" required id='fleuraisonLF' value=''\\r\\n          formControlName=\\\"fleuraison\\\" style=\\\"display: none;\\\">\\r\\n          <ion-select-option value=\\\"Ete\\\">Ete</ion-select-option>\\r\\n          <ion-select-option value=\\\"Hiver\\\">Hiver</ion-select-option>\\r\\n        </ion-select>\\r\\n\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.fleuraison.errors?.required\\\">\\r\\n          champ obligatoire\\r\\n        </span>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.fleuraison.errors?.minlength\\\">\\r\\n          minimun 2 caractéres\\r\\n        </span>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\" *ngIf=\\\"epoque === 'Fruit' || epoque === 'Legumes' \\\">période de récolte:</ion-label>\\r\\n        <ion-label color=\\\"light\\\" *ngIf=\\\"epoque === 'Fleur' \\\">Mois de fleuraison:</ion-label>\\r\\n        <ion-item>\\r\\n          <ion-select color=\\\"light\\\" placeholder=\\\"de\\\" required formControlName=\\\"de\\\" id=\\\"de\\\">\\r\\n            <ion-select-option *ngFor=\\\"let mois of listMois\\\" value=\\\"{{ mois }}\\\">{{ mois }}</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label color=\\\"light\\\" style=\\\"width: 2em;\\\">à</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-select color=\\\"light\\\" placeholder=\\\"a\\\" required formControlName=\\\"a\\\" id=\\\"a\\\">\\r\\n            <ion-select-option *ngFor=\\\"let mois of listMois\\\" value=\\\"{{ mois }}\\\">{{ mois }}</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">Hauteur:</ion-label>\\r\\n        <ion-select color=\\\"light\\\" placeholder=\\\"Select One\\\" required id='hauteur' value='' formControlName=\\\"hauteur\\\">\\r\\n          <ion-select-option value=\\\"basse\\\">basse</ion-select-option>\\r\\n          <ion-select-option value=\\\"moyenne\\\">moyenne</ion-select-option>\\r\\n          <ion-select-option value=\\\"haute\\\">haute</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">Description:</ion-label>\\r\\n\\r\\n        <ion-textarea color=\\\"light\\\" rows=\\\"6\\\" cols=\\\"20\\\" placeholder=\\\"description\\\" required formControlName=\\\"description\\\"\\r\\n          id='description' value=''></ion-textarea>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.description.errors?.required\\\">\\r\\n          champ obligatoire\\r\\n        </span>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.description.errors?.minlength\\\">\\r\\n          minimun 2 caractéres\\r\\n        </span>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">Type de plante</ion-label>\\r\\n        <ion-select color=\\\"light\\\" placeholder=\\\"Select One\\\" required id='type' value='' formControlName=\\\"type\\\">\\r\\n          <ion-select-option value=\\\"Fleur\\\">Fleur</ion-select-option>\\r\\n          <ion-select-option value=\\\"Fruit\\\">Fruit</ion-select-option>\\r\\n          <ion-select-option value=\\\"Legumes\\\">Légume</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n      <ion-button (click)=\\\"addPhoto()\\\" expand=\\\"block\\\" id=\\\"imageB\\\">\\r\\n        <ion-icon name=\\\"image\\\" slot=\\\"start\\\"></ion-icon>\\r\\n        Ouvrir la bibliothèque\\r\\n      </ion-button>\\r\\n      <div class=\\\"flex\\\">\\r\\n        <div class=\\\"img-box\\\">\\r\\n          <img id='urlimage' [src]=\\\"image\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <ion-button type=\\\"submit\\\" expand=\\\"block\\\">Valider</ion-button>\\r\\n    </form>\\r\\n  </ion-list>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}