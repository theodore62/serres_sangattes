{"version":3,"sources":["./src/app/gestion-commandes/gestion-commandes-routing.module.ts","./src/app/gestion-commandes/gestion-commandes.module.ts","./src/app/gestion-commandes/gestion-commandes.page.ts","./src/app/services/client/client.service.ts","./src/app/services/commande/commande.service.ts","./src/app/services/ionic-toast.service.ts","./src/app/gestion-commandes/gestion-commandes.page.scss","./src/app/gestion-commandes/gestion-commandes.page.html"],"names":[],"mappings":"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","file":"src_app_gestion-commandes_gestion-commandes_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GestionCommandesPage } from './gestion-commandes.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GestionCommandesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GestionCommandesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GestionCommandesPageRoutingModule } from './gestion-commandes-routing.module';\r\n\r\nimport { GestionCommandesPage } from './gestion-commandes.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    GestionCommandesPageRoutingModule\r\n  ],\r\n  declarations: [GestionCommandesPage]\r\n})\r\nexport class GestionCommandesPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IonicToastService } from '../services/ionic-toast.service';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ModalPage } from '../modal/modal.page';\r\nimport { Observable } from 'rxjs';\r\nimport { DatePipe } from '@angular/common';\r\nimport { formatDate } from '@angular/common';\r\nimport { element } from 'protractor';\r\n// formulaire\r\nimport {\r\n  Validators,\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n} from '@angular/forms';\r\n\r\n//model\r\nimport { Commande, Liste } from '../models/commande.model';\r\nimport { Client } from '../models/client.model';\r\nimport { Plante } from '../models/plante.model';\r\n// service\r\nimport { CommandeService } from '../services/commande/commande.service';\r\nimport { ClientService } from '../services/client/client.service';\r\nimport { PlantesService } from '../services/plante/plantes.service';\r\nimport { DetailsCommandePage } from '../details-commande/details-commande.page';\r\nimport { DataService } from '../services/data.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\n@Component({\r\n  selector: 'app-gestion-commandes',\r\n  templateUrl: './gestion-commandes.page.html',\r\n  styleUrls: ['./gestion-commandes.page.scss'],\r\n})\r\nexport class GestionCommandesPage implements OnInit {\r\n  public affichage: any;\r\n  public formulaireCommande: FormGroup;\r\n  public message: string;\r\n  public isSubmitted = false;\r\n  public listCommandes: any;\r\n  public listeTableauCommande: Observable<any[]>;\r\n  public listClients: Observable<any[]>;\r\n  public listPlantes: Observable<any[]>;\r\n  public dateDeDemain: any;\r\n  public dateDuJour: any;\r\n\r\n  public tableauCommandes: any = [];\r\n  public tableau: any = [];\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  public ListePlantesCommande: Liste = {\r\n    nom: '',\r\n    prix: '',\r\n    quantite: '',\r\n    unite: '',\r\n  };\r\n  // une commande\r\n  public commande: Commande = {\r\n    id: '',\r\n    liste: this.ListePlantesCommande,\r\n    date: '',\r\n    client: '',\r\n    infoComplementaire: '',\r\n  };\r\n\r\n  nom: string;\r\n  prix: string;\r\n  quantite: string;\r\n  unite: string;\r\n\r\n  public i = -30;\r\n\r\n  get errorControl() {\r\n    return this.formulaireCommande.controls;\r\n  }\r\n\r\n  constructor(\r\n    private dataService: DataService,\r\n    // private httpClient: HttpClient,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private toastCtrl: IonicToastService,\r\n    private commandeService: CommandeService,\r\n    private clientService: ClientService,\r\n    private plantesService: PlantesService,\r\n    private firestore: AngularFirestore,\r\n    public modalController: ModalController,\r\n    private datePipe: DatePipe\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    const demain = new Date();\r\n    const lendemain = this.addDaysToDate(demain, 1);\r\n    this.dateDeDemain = formatDate(lendemain, 'dd/MM/yyyy', 'fr-FR');\r\n    this.dateDuJour = formatDate(new Date(), 'dd/MM/yyyy', 'fr-FR');\r\n    this.listeCommande();\r\n    if (this.affichage === undefined) {\r\n      this.affichage = 'liste';\r\n    }\r\n    this.listCommandes = await this.initializeItems();\r\n    this.listClients = this.clientService.getListClients();\r\n    this.listPlantes = this.plantesService.getListPlantes();\r\n    this.formulaireCommande = this.formBuilder.group({\r\n      client: ['', [Validators.required]],\r\n      date: ['', [Validators.required]],\r\n      infoComplementaire: ['', [Validators.required]],\r\n    });\r\n  }\r\n  async listeCommande() {\r\n    this.listeTableauCommande = await this.initializeItems();\r\n  }\r\n\r\n  addDaysToDate(date, days) {\r\n    const res = new Date(date);\r\n    res.setDate(res.getDate() + days);\r\n    return res;\r\n  }\r\n\r\n  segmentChanged(ev: any) {\r\n    this.affichage = ev.detail.value;\r\n  }\r\n  addLigne() {\r\n    this.ListePlantesCommande.nom = this.nom;\r\n    this.ListePlantesCommande.prix = this.prix;\r\n    this.ListePlantesCommande.quantite = this.quantite;\r\n    this.ListePlantesCommande.unite = this.unite;\r\n    this.tableau.push({\r\n      id: this.i,\r\n      nom: this.nom,\r\n      prix: this.prix + '€',\r\n      quantite: this.quantite,\r\n      unite: this.unite,\r\n    });\r\n    this.i++;\r\n    this.nom = '';\r\n    this.prix = '';\r\n    this.quantite = '';\r\n    this.unite = '';\r\n  }\r\n  deleteLigne(id) {\r\n    this.tableau.filter((value, index, array) => {\r\n      if (value.id === id) {\r\n        this.tableau.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  ajouter() {\r\n    if (!this.formulaireCommande.valid) {\r\n      this.message = 'Veuillez compléter le formulaire';\r\n      this.toastCtrl.showToast(this.message);\r\n    } else {\r\n      this.commande.client = this.formulaireCommande.value.client;\r\n      this.commande.liste = this.tableau;\r\n      this.commande.date = formatDate(\r\n        this.formulaireCommande.value.date,\r\n        'dd/MM/yyyy',\r\n        'fr-FR'\r\n      );\r\n      this.commande.infoComplementaire =\r\n        this.formulaireCommande.value.infoComplementaire;\r\n      this.commandeService.postCommande(this.commande).then((retour) => {\r\n        if (retour.id == null) {\r\n          this.message = 'les données n\\ont pas pu être enregistrées';\r\n          this.toastCtrl.showToast(this.message);\r\n        } else {\r\n          this.firestore.doc(`Commandes/${retour.id}`).set({\r\n            id: retour.id,\r\n            liste: this.tableau,\r\n            client: this.formulaireCommande.value.client,\r\n            date: formatDate(\r\n              this.formulaireCommande.value.date,\r\n              'dd/MM/yyyy',\r\n              'fr-FR'\r\n            ),\r\n            infoComplementaire:\r\n              this.formulaireCommande.value.infoComplementaire,\r\n          });\r\n          this.message = 'les données ont pu être enregistrées';\r\n          this.toastCtrl.showToast(this.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  async filterList(ev: any) {\r\n    this.listCommandes = await this.initializeItems();\r\n    const searchTerm = ev.srcElement.value;\r\n\r\n    if (!searchTerm) {\r\n      return;\r\n    }\r\n    this.listCommandes = this.listCommandes.filter((currentPlant) => {\r\n      if (currentPlant.client && searchTerm) {\r\n        return (\r\n          currentPlant.client.toLowerCase().indexOf(searchTerm.toLowerCase()) >\r\n            -1 ||\r\n          currentPlant.nom.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  async doRefresh(event) {\r\n    const teste = await this.initializeItems();\r\n    setTimeout(() => {\r\n      this.listCommandes = teste;\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n\r\n  async initializeItems(): Promise<any> {\r\n    this.tableauCommandes = [];\r\n    this.tableauCommandes = await this.commandeService.getCommandesList();\r\n    return this.tableauCommandes;\r\n  }\r\n\r\n  async delete(idCommande) {\r\n    this.commandeService.deleteCommande(idCommande);\r\n    this.tableauCommandes = [];\r\n    this.listCommandes = await this.initializeItems();\r\n  }\r\n\r\n  async update(idCommande, idClient) {\r\n    const id = {\r\n      'idCommande': idCommande,\r\n      'idClient': idClient\r\n    };\r\n    this.dataService.setData('id',id);\r\n    this.router.navigateByUrl('details-commande');\r\n    // this.dataService.setData('idChauffeur', this.idChauffeur);\r\n    // this.router.navigateByUrl('');\r\n    // const modal = await this.modalController.create({\r\n    //   component: DetailsCommandePage,\r\n    //   // cssClass: 'my-custom-class',\r\n    //   componentProps: {\r\n    //     idCommande: idCommande,\r\n    //     idClient: idClient,\r\n    //   },\r\n    // });\r\n    // return await modal.present();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { first } from 'rxjs/Operators';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\nimport { Client } from '../../models/client.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  public ref = 'Client';\r\n  public client = this.firestore.collection<Client>('Client');\r\n\r\n  constructor(\r\n    private firestore: AngularFirestore,\r\n    private afSG: AngularFireStorage\r\n  ) { }\r\n  getListClients(){\r\n    return this.client.valueChanges();\r\n    // return this.client.valueChanges().pipe(first()).toPromise();\r\n  }\r\n\r\n  postClient(client: Client) {\r\n    return this.client.add(client);\r\n  }\r\n  getClient(id){\r\n    const url = '/' + id ;  \r\n    return this.client.doc(url).valueChanges().pipe(first()).toPromise();\r\n  }\r\n  updateClient(id, values) {\r\n    const url = '/' + id;\r\n    this.client.doc(url).update(values);\r\n    return;\r\n  }\r\n  deleteClient(id: Client) {\r\n    const url = '/' + id;\r\n    return this.client.doc(url).delete();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// model\r\nimport { Commande } from '../../models/commande.model';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { first } from 'rxjs/Operators';\r\nimport { AngularFireStorage } from '@angular/fire/storage';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommandeService {\r\n  public ref = 'Commandes';\r\n  public commande = this.firestore.collection<Commande>('Commandes');\r\n  constructor(\r\n    private firestore: AngularFirestore,\r\n    private afSG: AngularFireStorage\r\n  ) {}\r\n  \r\n  getListCommandes(){\r\n    return this.commande.valueChanges();\r\n  }\r\n  getCommandesList() {\r\n    return this.commande.valueChanges().pipe(first()).toPromise();\r\n  }\r\n  postCommande(commande: Commande) {\r\n    return this.commande.add(commande);\r\n  }\r\n  getDetailCommande(id) {\r\n    const url = '/' + id;\r\n    return this.commande.doc(url).valueChanges().pipe(first()).toPromise();\r\n  }\r\n  updateCommande(id, values: Commande) {\r\n    const url = '/' + id;\r\n    this.commande.doc(url).update(values);\r\n    return;\r\n  }\r\n  deleteCommande(id: Commande) {\r\n    const url = '/' + id;\r\n    return this.commande.doc(url).delete();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastController } from '@ionic/angular';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IonicToastService {\r\n  public myToast: any;\r\n\r\n  constructor(public toast: ToastController) {}\r\n\r\n  showToast(data) {\r\n    this.myToast = this.toast\r\n      .create({\r\n        message: data,\r\n        duration: 2000,\r\n        position: 'top',\r\n        cssClass: 'message'\r\n      })\r\n      .then((toastData) => {\r\n        console.log(toastData);\r\n        toastData.present();\r\n      });\r\n  }\r\n}\r\n","export default \"ion-header {\\n  --ion-background-color: #3366a0;\\n}\\n\\nion-content {\\n  color: #fff;\\n  --ion-background-color: linear-gradient(#3366a0, #9eb7d2);\\n}\\n\\nion-title,\\nion-searchbar,\\nion-toolbar,\\nion-label,\\nion-item,\\nion-icon,\\nion-back-button {\\n  color: #fff;\\n}\\n\\nion-button {\\n  --background: #6c91bb;\\n}\\n\\nion-item, ion-list, ion-item-options, ion-item-option {\\n  --ion-background-color: transparent !important;\\n}\\n\\n.titreAjouter {\\n  text-align: center;\\n  size: 40%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlc3Rpb24tY29tbWFuZGVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLCtCQUFBO0FBQUo7O0FBSUU7RUFFRSxXQUFBO0VBQ0EseURBQUE7QUFGSjs7QUFRRTs7Ozs7OztFQU9FLFdBQUE7QUFMSjs7QUFPRTtFQUNFLHFCQUFBO0FBSko7O0FBTUU7RUFDRSw4Q0FBQTtBQUhKOztBQU1FO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0FBSEoiLCJmaWxlIjoiZ2VzdGlvbi1jb21tYW5kZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWhlYWRlciB7XHJcbiAgICAvL3YyXHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjMzM2NmEwO1xyXG4gICAgLy92MVxyXG4gICAgLy8gLS1pb24tYmFja2dyb3VuZC1jb2xvcjogI2Y1YWYxOTtcclxuICB9XHJcbiAgaW9uLWNvbnRlbnQge1xyXG4gICAgLy92MlxyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoIzMzNjZhMCwgIzllYjdkMik7XHJcbiAgICAvL3YxXHJcbiAgICAvLyAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBsaW5lYXItZ3JhZGllbnQoI2Y1YWYxOSwgI2YxMjcxMSk7XHJcbiAgfVxyXG4gIC8vLS0tLS0tLS0tLS0tLS0vL1xyXG4gIC8vdjJcclxuICBpb24tdGl0bGUsXHJcbiAgaW9uLXNlYXJjaGJhcixcclxuICBpb24tdG9vbGJhcixcclxuICBpb24tbGFiZWwsXHJcbiAgaW9uLWl0ZW0sXHJcbiAgaW9uLWljb24sXHJcbiAgaW9uLWJhY2stYnV0dG9uICB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgaW9uLWJ1dHRvbiB7XHJcbiAgICAtLWJhY2tncm91bmQ6ICM2YzkxYmI7XHJcbiAgfVxyXG4gIGlvbi1pdGVtLGlvbi1saXN0LGlvbi1pdGVtLW9wdGlvbnMsaW9uLWl0ZW0tb3B0aW9uIHtcclxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAudGl0cmVBam91dGVye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgc2l6ZTogNDAlO1xyXG4gIH0iXX0= */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Gestion de Commandes</ion-title>\\r\\n  </ion-toolbar>\\r\\n\\r\\n  <ion-toolbar>\\r\\n    <!-- Disabled Segment -->\\r\\n    <ion-segment (ionChange)=\\\"segmentChanged($event)\\\" value=\\\"liste\\\">\\r\\n      <ion-segment-button value=\\\"ajouter\\\">\\r\\n        <ion-label>\\r\\n          <ion-icon name=\\\"add-circle-outline\\\" size=\\\"small\\\"></ion-icon>\\r\\n        </ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"liste\\\">\\r\\n        <ion-label>\\r\\n          <ion-icon name=\\\"list-outline\\\" size=\\\"small\\\"></ion-icon>\\r\\n        </ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-list *ngIf=\\\"affichage === 'ajouter' \\\" class=\\\"titreAjouter\\\">\\r\\n    <ion-label color=\\\"light\\\" class=\\\"titreAjouter\\\">Ajouter une Commande:</ion-label>\\r\\n    <ion-item>\\r\\n      <ion-label>liste plantes</ion-label>\\r\\n      <ion-select placeholder=\\\"Selectionner Nom du client\\\" [(ngModel)]=\\\"nom\\\">\\r\\n        <ion-select-option *ngFor=\\\"let plante of (listPlantes)|async\\\" value=\\\"{{ plante.nom }}\\\">{{ plante.nom }}\\r\\n        </ion-select-option>\\r\\n      </ion-select>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"number\\\" [(ngModel)]=\\\"prix \\\" placeholder=\\\"prix\\\"></ion-input>\\r\\n      <ion-input color=\\\"light\\\" type=\\\"number\\\" [(ngModel)]=\\\"quantite\\\" placeholder=\\\"quantité\\\"></ion-input>\\r\\n      <ion-select placeholder=\\\"Selectionner Nom du client\\\" [(ngModel)]=\\\"unite\\\">\\r\\n        <ion-select-option value=\\\"kg\\\">kg</ion-select-option>\\r\\n        <ion-select-option value=\\\"unité\\\">unité</ion-select-option>\\r\\n      </ion-select>\\r\\n      <ion-item>\\r\\n        <ion-icon name=\\\"close-circle-outline\\\"></ion-icon>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-icon name=\\\"chevron-down-circle-outline\\\" (click)=\\\"addLigne()\\\"></ion-icon>\\r\\n      </ion-item>\\r\\n\\r\\n    </ion-item>\\r\\n    <form (ngSubmit)=\\\"ajouter()\\\" [formGroup]=\\\"formulaireCommande\\\">\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">nom du client:</ion-label>\\r\\n        <ion-select placeholder=\\\"Selectionner Nom du client\\\" required formControlName=\\\"client\\\">\\r\\n          <ion-select-option *ngFor=\\\"let client of (listClients)|async\\\" value=\\\"{{ client.id }}\\\">{{ client.nom }} {{\\r\\n            client.prenom }} </ion-select-option>\\r\\n        </ion-select>\\r\\n\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.client.errors?.required\\\">\\r\\n          champ obligatoire\\r\\n        </span>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.client.errors?.minlength\\\">\\r\\n          minimun 2 caractéres\\r\\n        </span>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">Date de la commande:</ion-label>\\r\\n        <ion-input color=\\\"light\\\" type=\\\"date\\\" placeholder=\\\"date\\\" required formControlName=\\\"date\\\"> </ion-input>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.date.errors?.required\\\">\\r\\n          champ obligatoire\\r\\n        </span>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.date.errors?.minlength\\\">\\r\\n          minimun 2 caractéres\\r\\n        </span>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-list>\\r\\n          <ion-item *ngFor=\\\"let item of tableau\\\">\\r\\n            <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"nom\\\" id=\\\"nom\\\" value=\\\"{{ item.nom }}\\\"></ion-input>\\r\\n            <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"prix\\\" id=\\\"prix\\\" value=\\\"{{ item.prix }}\\\"></ion-input>\\r\\n            <ion-input color=\\\"light\\\" type=\\\"number\\\" placeholder=\\\"quantité\\\" value=\\\"{{ item.quantite }}\\\"></ion-input>\\r\\n            <ion-input color=\\\"light\\\" type=\\\"text\\\" placeholder=\\\"prix\\\" id=\\\"prix\\\" value=\\\"{{ item.unite }}\\\"></ion-input>\\r\\n            <ion-icon name=\\\"close-circle-outline\\\" (click)=\\\"deleteLigne(item.id)\\\"></ion-icon>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label color=\\\"light\\\">info complémentaire :</ion-label>\\r\\n        <ion-textarea color=\\\"light\\\" rows=\\\"6\\\" cols=\\\"20\\\" placeholder=\\\"info complémentaire\\\" required\\r\\n          formControlName=\\\"infoComplementaire\\\">\\r\\n        </ion-textarea>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.infoComplementaire.errors?.required\\\">\\r\\n          champ obligatoire\\r\\n        </span>\\r\\n        <span class=\\\"error ion-padding\\\" *ngIf=\\\"isSubmitted && errorControl.infoComplementaire.errors?.minlength\\\">\\r\\n          minimun 2 caractéres\\r\\n        </span>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-button type=\\\"submit\\\" expand=\\\"block\\\">Valider</ion-button>\\r\\n    </form>\\r\\n  </ion-list>\\r\\n  <ion-list *ngIf=\\\"affichage === 'liste' \\\" class=\\\"titreAjouter\\\">\\r\\n    <ion-item>\\r\\n      <ion-searchbar (ionChange)=\\\"filterList($event)\\\" placeholder=\\\"recherche\\\"></ion-searchbar>\\r\\n    </ion-item>\\r\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n      <ion-refresher-content></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <ion-item>\\r\\n      <ion-label color=\\\"light\\\" class=\\\"titreAjouter\\\">Liste des commandes:</ion-label>\\r\\n    </ion-item>\\r\\n    <!-- ******************************************************* -->\\r\\n    <ion-label color=\\\"light\\\" class=\\\"titreAjouter\\\">Liste des commandes Aujourd'hui:</ion-label>\\r\\n    <ion-list *ngFor=\\\"let commande of (listCommandes)\\\">\\r\\n      <ion-item-sliding *ngIf=\\\"commande.date === dateDuJour\\\">\\r\\n        <ion-item>\\r\\n          <ion-label color=\\\"light\\\"> Nom du client: {{commande.client }}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item-options side=\\\"end\\\">\\r\\n          <ion-item-option (click)=\\\"delete(commande.id)\\\" color=\\\"red\\\">\\r\\n            <ion-icon name=\\\"trash-outline\\\" size=\\\"small\\\" color=\\\"light\\\"></ion-icon>\\r\\n          </ion-item-option>\\r\\n          <ion-item-option (click)=\\\"update(commande.id,commande.client)\\\" color='red'>\\r\\n            <img src=\\\"https://img.icons8.com/carbon-copy/25/000000/approve-and-update.png\\\" />\\r\\n          </ion-item-option>\\r\\n        </ion-item-options>\\r\\n      </ion-item-sliding>\\r\\n    </ion-list>\\r\\n    <!-- ******************************************************* -->\\r\\n    <ion-label color=\\\"light\\\" class=\\\"titreAjouter\\\">Liste des commandes de demain:</ion-label>\\r\\n    <ion-list *ngFor=\\\"let commande of (listCommandes)\\\">\\r\\n      <ion-item-sliding *ngIf=\\\"commande.date === dateDeDemain\\\">\\r\\n        <ion-item>\\r\\n          <ion-label color=\\\"light\\\"> Nom du client: {{commande.client }}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item-options side=\\\"end\\\">\\r\\n          <ion-item-option (click)=\\\"delete(commande.id)\\\" color=\\\"red\\\">\\r\\n            <ion-icon name=\\\"trash-outline\\\" size=\\\"small\\\" color=\\\"light\\\"></ion-icon>\\r\\n          </ion-item-option>\\r\\n          <ion-item-option (click)=\\\"update(commande.id,commande.client)\\\" color='red'>\\r\\n            <img src=\\\"https://img.icons8.com/carbon-copy/25/000000/approve-and-update.png\\\" />\\r\\n          </ion-item-option>\\r\\n        </ion-item-options>\\r\\n      </ion-item-sliding>\\r\\n    </ion-list>\\r\\n        <!-- ******************************************************* -->\\r\\n        <ion-label color=\\\"light\\\" class=\\\"titreAjouter\\\">Liste des commandes à venir:</ion-label>\\r\\n        <ion-list *ngFor=\\\"let commande of (listCommandes)\\\">\\r\\n          <ion-item-sliding *ngIf=\\\"commande.date !== dateDeDemain || commande.date !== dateDuJour\\\">\\r\\n            <ion-item>\\r\\n              <ion-label color=\\\"light\\\"> Nom du client: {{commande.client }}</ion-label>\\r\\n              <ion-item>\\r\\n                <ion-label>Archiver</ion-label>\\r\\n                <ion-toggle [(ngModel)]=\\\"archiver\\\"></ion-toggle>\\r\\n              </ion-item>\\r\\n            </ion-item>\\r\\n            <ion-item-options side=\\\"end\\\">\\r\\n              <!-- <ion-item-option (click)=\\\"delete(commande.id)\\\" color=\\\"red\\\">\\r\\n                <ion-icon name=\\\"trash-outline\\\" size=\\\"small\\\" color=\\\"light\\\"></ion-icon>\\r\\n              </ion-item-option> -->\\r\\n              <ion-item-option (click)=\\\"update(commande.id,commande.client)\\\" color='red'>\\r\\n                <img src=\\\"https://img.icons8.com/carbon-copy/25/000000/approve-and-update.png\\\" />\\r\\n              </ion-item-option>\\r\\n            </ion-item-options>      \\r\\n          </ion-item-sliding>\\r\\n        </ion-list>\\r\\n\\r\\n\\r\\n  </ion-list>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}